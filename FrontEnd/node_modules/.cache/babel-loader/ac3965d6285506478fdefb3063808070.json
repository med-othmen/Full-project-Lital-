{"ast":null,"code":"var _jsxFileName = \"/home/othmen/Bureau/Simplon work/Projects Frond End & Back End/Lital/FrontEnd/src/components/LandingPage/LandingPageModal.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Modal, ModalBody, CardImg } from \"reactstrap\";\nimport { getUserFromApi } from \"./../../Action/userActions\";\nimport { addSessionInApi } from \"./../../Action/SessionActions\";\nimport { Athentificate } from \"./../../Action/athentification\";\nimport Equipe from \"./equipe.png\";\n\nclass ModalSignin extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modal: false,\n      username: \"\",\n      password: \"\"\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getAllUsers();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"danger\",\n      className: \"connecterModalBtn\",\n      onClick: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, \"Connecter\"), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: this.state.modal,\n      toggle: this.toggle,\n      contentClassName: \"custom-modal-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-inputs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardImg, {\n      src: Equipe,\n      alt: \"image de l'\\xE9quipe Lital\",\n      className: \"image-equipe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"p-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }, \"Entrez votre informations\"), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"entrez votre Nom\",\n      className: \"input-modal-nom\",\n      name: \"username\",\n      type: \"text\",\n      required: true,\n      onChange: e => this.setState({\n        username: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Entrez votre Mot de passe\",\n      className: \"input-modal-MDP\",\n      type: \"password\",\n      name: \"password\",\n      required: true,\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.props.Athentificate({\n        username: this.state.username,\n        password: this.state.password\n      }),\n      className: \"btn-inside-modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, \"Connecter\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  users: state.user\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getAllUsers: () => dispatch(getUserFromApi()),\n  AddSession: session => dispatch(addSessionInApi(session)),\n  Athentificate: userdata => dispatch(Athentificate(userdata))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalSignin);\n/*\n <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Modal title</ModalHeader>\n          <ModalBody>\n            <input\n              placeholder=\"Pseudo\"\n              onChange={(e) => this.setState({ username: e.target.value })}\n            />\n            <input\n              placeholder=\"Mot de passe\"\n              onChange={(e) => this.setState({ password: e.target.value })}\n            />\n            <button onClick={() => this.Signin(this.state)}>Connecter</button>\n          </ModalBody>\n        </Modal>\n        \n        \n        \n        \n          Signin(element) {\n    const user = this.props.users.filter(\n      (el) =>\n        el.username === element.username && el.password === element.password\n    );\n    if (user.length !== 0 && user[0].post === \"moderateur\") {\n      window.location.pathname = \"/product\";\n      this.props.AddSession({\n        userID: user[0].id,\n        post: user[0].post,\n      });\n      localStorage.setItem(\n        \"UserName\",\n        user[0].first_name + \" \" + user[0].last_name\n      );\n      localStorage.setItem(\"UserID\", user[0].id);\n      localStorage.setItem(\"Post\", user[0].post);\n    } else if (user.length !== 0 && user[0].post === \"admin\") {\n      window.location.pathname = \"/product\";\n      this.props.AddSession({\n        userID: user[0].id,\n        post: user[0].post,\n      });\n      localStorage.setItem(\n        \"UserName\",\n        user[0].first_name + \" \" + user[0].last_name\n      );\n      localStorage.setItem(\"UserID\", user[0].id);\n      localStorage.setItem(\"Post\", user[0].post);\n    } else alert(\"nexiste pas \");\n  }\n  \n  */","map":{"version":3,"sources":["/home/othmen/Bureau/Simplon work/Projects Frond End & Back End/Lital/FrontEnd/src/components/LandingPage/LandingPageModal.js"],"names":["React","connect","Button","Modal","ModalBody","CardImg","getUserFromApi","addSessionInApi","Athentificate","Equipe","ModalSignin","Component","state","modal","username","password","toggle","setState","componentDidMount","props","getAllUsers","render","e","target","value","mapStateToProps","users","user","mapDispatchToProps","dispatch","AddSession","session","userdata"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Button, Modal, ModalBody, CardImg } from \"reactstrap\";\nimport { getUserFromApi } from \"./../../Action/userActions\";\nimport { addSessionInApi } from \"./../../Action/SessionActions\";\nimport { Athentificate } from \"./../../Action/athentification\";\nimport Equipe from \"./equipe.png\";\n\nclass ModalSignin extends React.Component {\n  state = {\n    modal: false,\n    username: \"\",\n    password: \"\",\n  };\n  toggle = () => {\n    this.setState({ modal: !this.state.modal });\n  };\n  componentDidMount() {\n    this.props.getAllUsers();\n  }\n\n  render() {\n    return (\n      <div>\n        <Button\n          color=\"danger\"\n          className=\"connecterModalBtn\"\n          onClick={this.toggle}\n        >\n          Connecter\n        </Button>\n        <Modal\n          isOpen={this.state.modal}\n          toggle={this.toggle}\n          contentClassName=\"custom-modal-style\"\n        >\n          <ModalBody>\n            <div className=\"img-inputs\">\n              <div className=\"img-modal\">\n                <CardImg\n                  src={Equipe}\n                  alt=\"image de l'équipe Lital\"\n                  className=\"image-equipe\"\n                />\n              </div>\n              <div className=\"input-modal\">\n                <p className=\"p-modal\">Entrez votre informations</p>\n                <input\n                  placeholder=\"entrez votre Nom\"\n                  className=\"input-modal-nom\"\n                  name=\"username\"\n                  type=\"text\"\n                  required\n                  onChange={(e) => this.setState({ username: e.target.value })}\n                />\n                <input\n                  placeholder=\"Entrez votre Mot de passe\"\n                  className=\"input-modal-MDP\"\n                  type=\"password\"\n                  name=\"password\"\n                  required\n                  onChange={(e) => this.setState({ password: e.target.value })}\n                />\n                <button\n                  onClick={() =>\n                    this.props.Athentificate({\n                      username: this.state.username,\n                      password: this.state.password,\n                    })\n                  }\n                  className=\"btn-inside-modal\"\n                >\n                  Connecter\n                </button>\n              </div>\n            </div>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  users: state.user,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getAllUsers: () => dispatch(getUserFromApi()),\n  AddSession: (session) => dispatch(addSessionInApi(session)),\n  Athentificate: (userdata) => dispatch(Athentificate(userdata)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalSignin);\n\n/*\n <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Modal title</ModalHeader>\n          <ModalBody>\n            <input\n              placeholder=\"Pseudo\"\n              onChange={(e) => this.setState({ username: e.target.value })}\n            />\n            <input\n              placeholder=\"Mot de passe\"\n              onChange={(e) => this.setState({ password: e.target.value })}\n            />\n            <button onClick={() => this.Signin(this.state)}>Connecter</button>\n          </ModalBody>\n        </Modal>\n        \n        \n        \n        \n          Signin(element) {\n    const user = this.props.users.filter(\n      (el) =>\n        el.username === element.username && el.password === element.password\n    );\n    if (user.length !== 0 && user[0].post === \"moderateur\") {\n      window.location.pathname = \"/product\";\n      this.props.AddSession({\n        userID: user[0].id,\n        post: user[0].post,\n      });\n      localStorage.setItem(\n        \"UserName\",\n        user[0].first_name + \" \" + user[0].last_name\n      );\n      localStorage.setItem(\"UserID\", user[0].id);\n      localStorage.setItem(\"Post\", user[0].post);\n    } else if (user.length !== 0 && user[0].post === \"admin\") {\n      window.location.pathname = \"/product\";\n      this.props.AddSession({\n        userID: user[0].id,\n        post: user[0].post,\n      });\n      localStorage.setItem(\n        \"UserName\",\n        user[0].first_name + \" \" + user[0].last_name\n      );\n      localStorage.setItem(\"UserID\", user[0].id);\n      localStorage.setItem(\"Post\", user[0].post);\n    } else alert(\"nexiste pas \");\n  }\n  \n  */\n"]},"metadata":{},"sourceType":"module"}