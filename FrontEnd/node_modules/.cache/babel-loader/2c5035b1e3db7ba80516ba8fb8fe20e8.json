{"ast":null,"code":"var _jsxFileName = \"/home/othmen/Bureau/Simplon work/React projects/Atelier-Lital-Project/src/components/ProductContainer/productContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getProductsFromApi, DeleteProductFromApi } from \"../../Action/ProductActions.js\";\nimport Addproduct from \"./../Modals/ModalAddProduct\";\nimport ProductShow from \"./../Modals/ModalShowProduct\";\nimport { Card, Button, CardTitle, CardText, Row, ButtonGroup, CardImg } from \"reactstrap\";\nimport { addHistoryInApi, getAllHistoryFromApi } from \"../../Action/historyActions\";\nimport ModalEditProduct from \"../Modals/ModalEditProduct\";\nvar newArray = [];\nvar Types = [];\nvar Colors = [];\nvar products = [];\nvar Brands = [];\nvar prduct_status = [];\nvar Mesures = [];\nvar Location = [];\nvar Boxs = [];\nvar Quantity = [];\nvar today = new Date();\n\nclass Productcontainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Modalopen: false,\n      Modalopenshow: false,\n      element: [],\n      product: products,\n      reference: \"\",\n      type: \"\",\n      color: \"\"\n    };\n\n    this.close = () => {\n      this.setState({\n        open: !this.state.open\n      });\n    };\n\n    this.distinctDoubleType = () => {\n      let ArrayOfTypes = [];\n      this.props.products.map(el => ArrayOfTypes.push(el.type));\n      newArray = new Set(ArrayOfTypes);\n      Types = [...newArray];\n    };\n\n    this.distinctDoubleColor = () => {\n      let ArrayofColors = [];\n      this.props.products.map(el => ArrayofColors.push(el.color));\n      newArray = new Set(ArrayofColors);\n      Colors = [...newArray];\n    };\n\n    this.distinctDoubleBrand = () => {\n      let ArrayofBrand = [];\n      this.props.products.map(el => ArrayofBrand.push(el.brand));\n      newArray = new Set(ArrayofBrand);\n      Brands = [...newArray];\n    };\n\n    this.distinctDoubleProductStatus = () => {\n      let Arrayofproduct_status = [];\n      this.props.products.map(el => Arrayofproduct_status.push(el.prduct_status));\n      newArray = new Set(Arrayofproduct_status);\n      prduct_status = [...newArray];\n    };\n\n    this.distinctDoubleMesures = () => {\n      let Arrayofmesures = [];\n      this.props.products.map(el => Arrayofmesures.push(el.mesures));\n      newArray = new Set(Arrayofmesures);\n      Mesures = [...newArray];\n    };\n\n    this.distinctDoubleLocation = () => {\n      let ArrayofLocation = [];\n      this.props.products.map(el => ArrayofLocation.push(el.location));\n      newArray = new Set(ArrayofLocation);\n      Location = [...newArray];\n    };\n\n    this.distinctDoubleBox = () => {\n      let ArrayofBoxs = [];\n      this.props.products.map(el => ArrayofBoxs.push(el.box));\n      newArray = new Set(ArrayofBoxs);\n      Boxs = [...newArray];\n    };\n\n    this.distinctDoubleQuantity = () => {\n      let Arrayofquantity = [];\n      this.props.products.map(el => Arrayofquantity.push(el.quantity));\n      newArray = new Set(Arrayofquantity);\n      Quantity = [...newArray];\n    };\n\n    this.toggle = el => {\n      this.setState({\n        Modalopen: !this.state.Modalopen,\n        element: el,\n        reference: \"\",\n        type: \"\",\n        collection: \"\",\n        prduct_status: \"\",\n        brand: \"\",\n        mesures: \"\",\n        color: \"\",\n        location: \"\",\n        box: \"\",\n        quantity: \"\"\n      });\n    };\n\n    this.toggleshow = el => {\n      this.setState({\n        Modalopenshow: !this.state.Modalopenshow\n      });\n    };\n\n    this.filterByRef = e => {\n      this.setState({\n        reference: e.target.value\n      });\n      console.log(this.state.reference);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getAllProducts();\n    this.props.getallhistory();\n    console.log(\"tttttttt\", this.props.products);\n    this.setState({\n      products: this.props.products\n    });\n    console.log(\"rrrr\", this.state.products);\n  }\n\n  render() {\n    this.distinctDoubleType();\n    this.distinctDoubleColor();\n    this.distinctDoubleBrand();\n    this.distinctDoubleProductStatus();\n    this.distinctDoubleMesures();\n    this.distinctDoubleLocation();\n    this.distinctDoubleBox();\n    this.distinctDoubleQuantity();\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-5 d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Filtrer par reference ...\",\n      onChange: e => this.filterByRef(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Addproduct, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      lg: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ici\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      onChange: e => this.setState({\n        type: e.target.value\n      }),\n      name: \"pets\",\n      id: \"product-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }, \"Type\"), Types.map(el => /*#__PURE__*/React.createElement(\"option\", {\n      value: el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }, el))), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: e => this.setState({\n        color: e.target.value\n      }),\n      name: \"pets\",\n      id: \"color-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 15\n      }\n    }, \"Couleur\"), Colors.map(el => /*#__PURE__*/React.createElement(\"option\", {\n      value: el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    }, el))), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: e => this.setState({\n        brand: e.target.value\n      }),\n      name: \"pets\",\n      id: \"brand-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }, \"Marque\"), Brands.map(el => /*#__PURE__*/React.createElement(\"option\", {\n      value: el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, el))), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: e => this.setState({\n        prduct_status: e.target.value\n      }),\n      name: \"pets\",\n      id: \"productStatus-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 15\n      }\n    }, \"Produit_Status\"), prduct_status.map(el => /*#__PURE__*/React.createElement(\"option\", {\n      value: el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }\n    }, el))), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: e => this.setState({\n        mesures: e.target.value\n      }),\n      name: \"pets\",\n      id: \"Mesure-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 15\n      }\n    }, \"Mesure\"), Mesures.map(el => /*#__PURE__*/React.createElement(\"option\", {\n      value: el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }, el))), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: e => this.setState({\n        location: e.target.value\n      }),\n      name: \"pets\",\n      id: \"Location-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }\n    }, \"Localisation\"), Location.map(el => /*#__PURE__*/React.createElement(\"option\", {\n      value: el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }\n    }, el))), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: e => this.setState({\n        box: e.target.value\n      }),\n      name: \"pets\",\n      id: \"box-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 15\n      }\n    }, \"Embalage\"), Boxs.map(el => /*#__PURE__*/React.createElement(\"option\", {\n      value: el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }\n    }, el))), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: e => this.setState({\n        quantity: e.target.value\n      }),\n      name: \"pets\",\n      id: \"Quantity-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 15\n      }\n    }, \"Quantit\\xE9\"), Quantity.map(el => /*#__PURE__*/React.createElement(\"option\", {\n      value: el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }\n    }, el))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }\n    }, this.props.products.filter(eltype => this.state.type === \"\" ? eltype : eltype.type === this.state.type).filter(elcollection => this.state.collection === \"\" ? elcollection : elcollection.collection === this.state.collection).filter(elbrand => this.state.brand === \"\" ? elbrand : elbrand.brand === this.state.brand).filter(elprductS => this.state.prduct_status === \"\" ? elprductS : elprductS.prduct_status === this.state.prduct_status).filter(elmesure => this.state.mesures === \"\" ? elmesure : elmesure.mesures === this.state.mesures).filter(elcolor => this.state.color === \"\" ? elcolor : elcolor.color === this.state.color).filter(ellcoation => this.state.location === \"\" ? ellcoation : ellcoation.location === this.state.location).filter(elbox => this.state.box === \"\" ? elbox : elbox.box === this.state.box).filter(elquantity => this.state.quantity === \"\" ? elquantity : elquantity.quantity === this.state.quantity).filter(elreference => this.state.reference === \"\" ? elreference : elreference.reference === this.state.reference).map(prod => /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => this.toggleshow(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"cardproduct\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CardImg, {\n      top: true,\n      width: \"25px\",\n      src: prod.picture,\n      alt: \"Card image cap\",\n      className: \"cardimageproduct\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 19\n      }\n    }, prod.type), /*#__PURE__*/React.createElement(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 19\n      }\n    }, \"R\\xE9ference :\", prod.reference), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 19\n      }\n    }, \"Quantit\\xE9:\", prod.quantity), /*#__PURE__*/React.createElement(ButtonGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.toggle(prod),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 21\n      }\n    }, \"Modifier\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        this.props.DeleteProduct(prod);\n        this.props.Addhistory({\n          action: \"Delete\",\n          UserName: localStorage.getItem(\"UserName\"),\n          UserID: localStorage.getItem(\"UserID\"),\n          Date: today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds() + \"Date\" + today.getDate() + \"/\" + (today.getMonth() + 1) + \"/\" + today.getFullYear(),\n          product: prod.id\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 21\n      }\n    }, \"Supprimer\")))))), /*#__PURE__*/React.createElement(ModalEditProduct, {\n      Modalopen: this.state.Modalopen,\n      toggle: this.toggle,\n      element: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ProductShow, {\n      Modalopenshow: this.state.Modalopenshow,\n      toggleshow: this.toggleshow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  products: state.products,\n  history: state.history\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getAllProducts: () => dispatch(getProductsFromApi()),\n  getallhistory: () => dispatch(getAllHistoryFromApi()),\n  DeleteProduct: id => dispatch(DeleteProductFromApi(id)),\n  Addhistory: element => dispatch(addHistoryInApi(element))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Productcontainer);\n/*\n<div>\n              <div>\n                <CardImg\n                  top\n                  width=\"25px\"\n                  src={el.picture}\n                  alt=\"Card image cap\"\n                />\n              </div>\n              <div>{el.name}</div>\n              <div>\n                <button outline color=\"primary\" onClick={() => this.toggle(el)}>\n                  Modifier\n                </button>\n                <button\n                  onClick={() => {\n                    this.props.Addhistory({\n                      action: \"Delete\",\n                      UserName: localStorage.getItem(\"UserName\"),\n                      UserID: localStorage.getItem(\"UserID\"),\n                      Date:\n                        today.getHours() +\n                        \":\" +\n                        today.getMinutes() +\n                        \":\" +\n                        today.getSeconds() +\n                        \"Date\" +\n                        today.getDate() +\n                        \"/\" +\n                        (today.getMonth() + 1) +\n                        \"/\" +\n                        today.getFullYear(),\n                      product: el.id,\n                    });\n                    this.props.DeleteProduct(el.id);\n                  }}\n                >\n                  Supprimer\n                </button>\n              </div>\n            </div>\n            */","map":{"version":3,"sources":["/home/othmen/Bureau/Simplon work/React projects/Atelier-Lital-Project/src/components/ProductContainer/productContainer.js"],"names":["React","Component","connect","getProductsFromApi","DeleteProductFromApi","Addproduct","ProductShow","Card","Button","CardTitle","CardText","Row","ButtonGroup","CardImg","addHistoryInApi","getAllHistoryFromApi","ModalEditProduct","newArray","Types","Colors","products","Brands","prduct_status","Mesures","Location","Boxs","Quantity","today","Date","Productcontainer","state","Modalopen","Modalopenshow","element","product","reference","type","color","close","setState","open","distinctDoubleType","ArrayOfTypes","props","map","el","push","Set","distinctDoubleColor","ArrayofColors","distinctDoubleBrand","ArrayofBrand","brand","distinctDoubleProductStatus","Arrayofproduct_status","distinctDoubleMesures","Arrayofmesures","mesures","distinctDoubleLocation","ArrayofLocation","location","distinctDoubleBox","ArrayofBoxs","box","distinctDoubleQuantity","Arrayofquantity","quantity","toggle","collection","toggleshow","filterByRef","e","target","value","console","log","componentDidMount","getAllProducts","getallhistory","render","filter","eltype","elcollection","elbrand","elprductS","elmesure","elcolor","ellcoation","elbox","elquantity","elreference","prod","picture","DeleteProduct","Addhistory","action","UserName","localStorage","getItem","UserID","getHours","getMinutes","getSeconds","getDate","getMonth","getFullYear","id","mapStateToProps","history","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  getProductsFromApi,\n  DeleteProductFromApi,\n} from \"../../Action/ProductActions.js\";\nimport Addproduct from \"./../Modals/ModalAddProduct\";\nimport ProductShow from \"./../Modals/ModalShowProduct\";\nimport {\n  Card,\n  Button,\n  CardTitle,\n  CardText,\n  Row,\n  ButtonGroup,\n  CardImg,\n} from \"reactstrap\";\nimport {\n  addHistoryInApi,\n  getAllHistoryFromApi,\n} from \"../../Action/historyActions\";\nimport ModalEditProduct from \"../Modals/ModalEditProduct\";\n\nvar newArray = [];\nvar Types = [];\nvar Colors = [];\nvar products = [];\nvar Brands = [];\nvar prduct_status = [];\nvar Mesures = [];\nvar Location = [];\nvar Boxs = [];\nvar Quantity = [];\nvar today = new Date();\n\nclass Productcontainer extends Component {\n  state = {\n    Modalopen: false,\n    Modalopenshow: false,\n    element: [],\n    product: products,\n    reference: \"\",\n    type: \"\",\n    color: \"\",\n  };\n\n  componentDidMount() {\n    this.props.getAllProducts();\n    this.props.getallhistory();\n    console.log(\"tttttttt\", this.props.products);\n    this.setState({ products: this.props.products });\n    console.log(\"rrrr\", this.state.products);\n  }\n  close = () => {\n    this.setState({ open: !this.state.open });\n  };\n  distinctDoubleType = () => {\n    let ArrayOfTypes = [];\n    this.props.products.map((el) => ArrayOfTypes.push(el.type));\n    newArray = new Set(ArrayOfTypes);\n    Types = [...newArray];\n  };\n  distinctDoubleColor = () => {\n    let ArrayofColors = [];\n    this.props.products.map((el) => ArrayofColors.push(el.color));\n    newArray = new Set(ArrayofColors);\n    Colors = [...newArray];\n  };\n  distinctDoubleBrand = () => {\n    let ArrayofBrand = [];\n    this.props.products.map((el) => ArrayofBrand.push(el.brand));\n    newArray = new Set(ArrayofBrand);\n    Brands = [...newArray];\n  };\n  distinctDoubleProductStatus = () => {\n    let Arrayofproduct_status = [];\n    this.props.products.map((el) =>\n      Arrayofproduct_status.push(el.prduct_status)\n    );\n    newArray = new Set(Arrayofproduct_status);\n    prduct_status = [...newArray];\n  };\n  distinctDoubleMesures = () => {\n    let Arrayofmesures = [];\n    this.props.products.map((el) => Arrayofmesures.push(el.mesures));\n    newArray = new Set(Arrayofmesures);\n    Mesures = [...newArray];\n  };\n  distinctDoubleLocation = () => {\n    let ArrayofLocation = [];\n    this.props.products.map((el) => ArrayofLocation.push(el.location));\n    newArray = new Set(ArrayofLocation);\n    Location = [...newArray];\n  };\n  distinctDoubleBox = () => {\n    let ArrayofBoxs = [];\n\n    this.props.products.map((el) => ArrayofBoxs.push(el.box));\n    newArray = new Set(ArrayofBoxs);\n    Boxs = [...newArray];\n  };\n  distinctDoubleQuantity = () => {\n    let Arrayofquantity = [];\n\n    this.props.products.map((el) => Arrayofquantity.push(el.quantity));\n    newArray = new Set(Arrayofquantity);\n    Quantity = [...newArray];\n  };\n  toggle = (el) => {\n    this.setState({\n      Modalopen: !this.state.Modalopen,\n      element: el,\n\n      reference: \"\",\n      type: \"\",\n      collection: \"\",\n      prduct_status: \"\",\n      brand: \"\",\n      mesures: \"\",\n      color: \"\",\n      location: \"\",\n      box: \"\",\n      quantity: \"\",\n    });\n  };\n  toggleshow = (el) => {\n    this.setState({\n      Modalopenshow: !this.state.Modalopenshow,\n    });\n  };\n  filterByRef = (e) => {\n    this.setState({ reference: e.target.value });\n    console.log(this.state.reference);\n  };\n  render() {\n    this.distinctDoubleType();\n    this.distinctDoubleColor();\n    this.distinctDoubleBrand();\n    this.distinctDoubleProductStatus();\n    this.distinctDoubleMesures();\n    this.distinctDoubleLocation();\n    this.distinctDoubleBox();\n    this.distinctDoubleQuantity();\n\n    return (\n      <div>\n        <Row>\n          <div className=\"mt-5 d-flex\">\n            <i class=\"fas fa-search\"></i>\n            <input\n              placeholder=\"Filtrer par reference ...\"\n              onChange={(e) => this.filterByRef(e)}\n            />\n\n            <Addproduct />\n          </div>\n        </Row>\n        <Row xs={12} sm={12} md={12} lg={12}>\n          <div className=\"ici\">\n            <select\n              onChange={(e) => this.setState({ type: e.target.value })}\n              name=\"pets\"\n              id=\"product-select\"\n            >\n              <option value=\"\">Type</option>\n              {Types.map((el) => (\n                <option value={el}>{el}</option>\n              ))}\n            </select>\n            <select\n              onChange={(e) => this.setState({ color: e.target.value })}\n              name=\"pets\"\n              id=\"color-select\"\n            >\n              <option value=\"\">Couleur</option>\n              {Colors.map((el) => (\n                <option value={el}>{el}</option>\n              ))}\n            </select>\n            <select\n              onChange={(e) => this.setState({ brand: e.target.value })}\n              name=\"pets\"\n              id=\"brand-select\"\n            >\n              <option value=\"\">Marque</option>\n              {Brands.map((el) => (\n                <option value={el}>{el}</option>\n              ))}\n            </select>\n            <select\n              onChange={(e) => this.setState({ prduct_status: e.target.value })}\n              name=\"pets\"\n              id=\"productStatus-select\"\n            >\n              <option value=\"\">Produit_Status</option>\n              {prduct_status.map((el) => (\n                <option value={el}>{el}</option>\n              ))}\n            </select>\n            <select\n              onChange={(e) => this.setState({ mesures: e.target.value })}\n              name=\"pets\"\n              id=\"Mesure-select\"\n            >\n              <option value=\"\">Mesure</option>\n              {Mesures.map((el) => (\n                <option value={el}>{el}</option>\n              ))}\n            </select>\n            <select\n              onChange={(e) => this.setState({ location: e.target.value })}\n              name=\"pets\"\n              id=\"Location-select\"\n            >\n              <option value=\"\">Localisation</option>\n              {Location.map((el) => (\n                <option value={el}>{el}</option>\n              ))}\n            </select>\n            <select\n              onChange={(e) => this.setState({ box: e.target.value })}\n              name=\"pets\"\n              id=\"box-select\"\n            >\n              <option value=\"\">Embalage</option>\n              {Boxs.map((el) => (\n                <option value={el}>{el}</option>\n              ))}\n            </select>\n            <select\n              onChange={(e) => this.setState({ quantity: e.target.value })}\n              name=\"pets\"\n              id=\"Quantity-select\"\n            >\n              <option value=\"\">Quantité</option>\n              {Quantity.map((el) => (\n                <option value={el}>{el}</option>\n              ))}\n            </select>\n          </div>\n        </Row>\n        <div className=\"fl\">\n          {this.props.products\n            .filter((eltype) =>\n              this.state.type === \"\" ? eltype : eltype.type === this.state.type\n            )\n            .filter((elcollection) =>\n              this.state.collection === \"\"\n                ? elcollection\n                : elcollection.collection === this.state.collection\n            )\n            .filter((elbrand) =>\n              this.state.brand === \"\"\n                ? elbrand\n                : elbrand.brand === this.state.brand\n            )\n            .filter((elprductS) =>\n              this.state.prduct_status === \"\"\n                ? elprductS\n                : elprductS.prduct_status === this.state.prduct_status\n            )\n            .filter((elmesure) =>\n              this.state.mesures === \"\"\n                ? elmesure\n                : elmesure.mesures === this.state.mesures\n            )\n            .filter((elcolor) =>\n              this.state.color === \"\"\n                ? elcolor\n                : elcolor.color === this.state.color\n            )\n            .filter((ellcoation) =>\n              this.state.location === \"\"\n                ? ellcoation\n                : ellcoation.location === this.state.location\n            )\n            .filter((elbox) =>\n              this.state.box === \"\" ? elbox : elbox.box === this.state.box\n            )\n            .filter((elquantity) =>\n              this.state.quantity === \"\"\n                ? elquantity\n                : elquantity.quantity === this.state.quantity\n            )\n            .filter((elreference) =>\n              this.state.reference === \"\"\n                ? elreference\n                : elreference.reference === this.state.reference\n            )\n            .map((prod) => (\n              <a onClick={() => this.toggleshow()}>\n                <Card className=\"cardproduct\">\n                  <CardImg\n                    top\n                    width=\"25px\"\n                    src={prod.picture}\n                    alt=\"Card image cap\"\n                    className=\"cardimageproduct\"\n                  />\n                  <CardTitle>{prod.type}</CardTitle>\n\n                  <CardText>Réference :{prod.reference}</CardText>\n                  <span>Quantité:{prod.quantity}</span>\n\n                  <ButtonGroup>\n                    <Button onClick={() => this.toggle(prod)}>Modifier</Button>\n                    <Button\n                      onClick={() => {\n                        this.props.DeleteProduct(prod);\n                        this.props.Addhistory({\n                          action: \"Delete\",\n                          UserName: localStorage.getItem(\"UserName\"),\n                          UserID: localStorage.getItem(\"UserID\"),\n                          Date:\n                            today.getHours() +\n                            \":\" +\n                            today.getMinutes() +\n                            \":\" +\n                            today.getSeconds() +\n                            \"Date\" +\n                            today.getDate() +\n                            \"/\" +\n                            (today.getMonth() + 1) +\n                            \"/\" +\n                            today.getFullYear(),\n                          product: prod.id,\n                        });\n                      }}\n                    >\n                      Supprimer\n                    </Button>\n                  </ButtonGroup>\n                </Card>\n              </a>\n            ))}\n        </div>\n        <ModalEditProduct\n          Modalopen={this.state.Modalopen}\n          toggle={this.toggle}\n          element={this.state}\n        />\n        <ProductShow\n          Modalopenshow={this.state.Modalopenshow}\n          toggleshow={this.toggleshow}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  products: state.products,\n  history: state.history,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getAllProducts: () => dispatch(getProductsFromApi()),\n  getallhistory: () => dispatch(getAllHistoryFromApi()),\n  DeleteProduct: (id) => dispatch(DeleteProductFromApi(id)),\n  Addhistory: (element) => dispatch(addHistoryInApi(element)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Productcontainer);\n\n/*\n<div>\n              <div>\n                <CardImg\n                  top\n                  width=\"25px\"\n                  src={el.picture}\n                  alt=\"Card image cap\"\n                />\n              </div>\n              <div>{el.name}</div>\n              <div>\n                <button outline color=\"primary\" onClick={() => this.toggle(el)}>\n                  Modifier\n                </button>\n                <button\n                  onClick={() => {\n                    this.props.Addhistory({\n                      action: \"Delete\",\n                      UserName: localStorage.getItem(\"UserName\"),\n                      UserID: localStorage.getItem(\"UserID\"),\n                      Date:\n                        today.getHours() +\n                        \":\" +\n                        today.getMinutes() +\n                        \":\" +\n                        today.getSeconds() +\n                        \"Date\" +\n                        today.getDate() +\n                        \"/\" +\n                        (today.getMonth() + 1) +\n                        \"/\" +\n                        today.getFullYear(),\n                      product: el.id,\n                    });\n                    this.props.DeleteProduct(el.id);\n                  }}\n                >\n                  Supprimer\n                </button>\n              </div>\n            </div>\n            */\n"]},"metadata":{},"sourceType":"module"}