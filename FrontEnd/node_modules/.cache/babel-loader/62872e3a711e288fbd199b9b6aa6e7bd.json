{"ast":null,"code":"var _jsxFileName = \"/home/othmen/Bureau/Simplon work/React projects/Atelier-Lital-Project/src/components/ProductContainer/productContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getProductsFromApi, DeleteProductFromApi } from \"../../Action/ProductActions.js\";\nimport Addproduct from \"./../Modals/ModalAddProduct\";\nimport ProductShow from \"./../Modals/ModalShowProduct\";\nimport { Card, Button, CardTitle, CardText, Row, ButtonGroup, CardImg } from \"reactstrap\";\nimport { addHistoryInApi, getAllHistoryFromApi } from \"../../Action/historyActions\";\nimport ModalEditProduct from \"../Modals/ModalEditProduct\";\nvar newArray = [];\nvar Types = [];\nvar Colors = [];\nvar products = [];\nvar Brands = [];\nvar prduct_status = [];\nvar Mesures = [];\nvar Location = [];\nvar Boxs = [];\nvar Quantity = [];\nvar today = new Date();\n\nclass Productcontainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Modalopen: false,\n      Modalopenshow: false,\n      element: [],\n      product: products\n    };\n\n    this.close = () => {\n      this.setState({\n        open: !this.state.open\n      });\n    };\n\n    this.distinctDoubleType = () => {\n      let ArrayOfTypes = [];\n      this.props.products.map(el => ArrayOfTypes.push(el.type));\n      newArray = new Set(ArrayOfTypes);\n      Types = [...newArray];\n    };\n\n    this.distinctDoubleColor = () => {\n      let ArrayofColors = [];\n      this.props.products.map(el => ArrayofColors.push(el.color));\n      newArray = new Set(ArrayofColors);\n      Colors = [...newArray];\n    };\n\n    this.distinctDoubleBrand = () => {\n      let ArrayofBrand = [];\n      this.props.products.map(el => ArrayofBrand.push(el.brand));\n      newArray = new Set(ArrayofBrand);\n      Brands = [...newArray];\n    };\n\n    this.distinctDoubleProductStatus = () => {\n      let Arrayofproduct_status = [];\n      this.props.products.map(el => Arrayofproduct_status.push(el.prduct_status));\n      newArray = new Set(Arrayofproduct_status);\n      prduct_status = [...newArray];\n    };\n\n    this.distinctDoubleMesures = () => {\n      let Arrayofmesures = [];\n      this.props.products.map(el => Arrayofmesures.push(el.mesures));\n      newArray = new Set(Arrayofmesures);\n      Mesures = [...newArray];\n    };\n\n    this.distinctDoubleLocation = () => {\n      let ArrayofLocation = [];\n      this.props.products.map(el => ArrayofLocation.push(el.location));\n      newArray = new Set(ArrayofLocation);\n      Location = [...newArray];\n    };\n\n    this.distinctDoubleBox = () => {\n      let ArrayofBoxs = [];\n      this.props.products.map(el => ArrayofBoxs.push(el.box));\n      newArray = new Set(ArrayofBoxs);\n      Boxs = [...newArray];\n    };\n\n    this.distinctDoubleQuantity = () => {\n      let Arrayofquantity = [];\n      this.props.products.map(el => Arrayofquantity.push(el.quantity));\n      newArray = new Set(Arrayofquantity);\n      Quantity = [...newArray];\n    };\n\n    this.toggle = el => {\n      this.setState({\n        Modalopen: !this.state.Modalopen,\n        element: el,\n        arr: this.props.tab\n      });\n    };\n\n    this.toggleshow = el => {\n      this.setState({\n        Modalopenshow: !this.state.Modalopenshow\n      });\n    };\n\n    this.filterByRef = e => {\n      this.setState({\n        reference: e.target.value\n      });\n      console.log(this.state.reference);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getAllProducts();\n    this.props.getallhistory();\n    console.log(\"tttttttt\", this.props.products);\n    this.setState({\n      products: this.props.products\n    });\n    console.log(\"rrrr\", this.state.products);\n  }\n\n  render() {\n    this.distinctDoubleType();\n    this.distinctDoubleColor();\n    this.distinctDoubleBrand();\n    this.distinctDoubleProductStatus();\n    this.distinctDoubleMesures();\n    this.distinctDoubleLocation();\n    this.distinctDoubleBox();\n    this.distinctDoubleQuantity();\n    var x = x.push(this.props.products);\n    products = this.props.products;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-5 d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Filtrer par reference ...\",\n      onChange: e => this.filterByRef(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Addproduct, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      lg: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ici\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      name: \"pets\",\n      id: \"product-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, \"Type\"), Types.map(el => /*#__PURE__*/React.createElement(\"option\", {\n      value: el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }\n    }, el))), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"pets\",\n      id: \"color-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }, \"Couleur\"), Colors.map(el => /*#__PURE__*/React.createElement(\"option\", {\n      value: el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }\n    }, el))), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"pets\",\n      id: \"brand-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    }, \"Marque\"), Brands.map(el => /*#__PURE__*/React.createElement(\"option\", {\n      value: el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }, el))), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"pets\",\n      id: \"productStatus-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 15\n      }\n    }, \"Produit_Status\"), prduct_status.map(el => /*#__PURE__*/React.createElement(\"option\", {\n      value: el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, el))), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"pets\",\n      id: \"Mesure-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 15\n      }\n    }, \"Mesure\"), Mesures.map(el => /*#__PURE__*/React.createElement(\"option\", {\n      value: el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }, el))), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"pets\",\n      id: \"Location-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }, \"Localisation\"), Location.map(el => /*#__PURE__*/React.createElement(\"option\", {\n      value: el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, el))), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"pets\",\n      id: \"box-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }, \"Embalage\"), Boxs.map(el => /*#__PURE__*/React.createElement(\"option\", {\n      value: el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, el))), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"pets\",\n      id: \"Quantity-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 15\n      }\n    }, \"Quantit\\xE9\"), Quantity.map(el => /*#__PURE__*/React.createElement(\"option\", {\n      value: el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, el))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }\n    }, this.props.products.map(el => /*#__PURE__*/React.createElement(\"a\", {\n      onClick: () => this.toggleshow(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"cardproduct\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(CardImg, {\n      top: true,\n      width: \"25px\",\n      src: el.picture,\n      alt: \"Card image cap\",\n      className: \"cardimageproduct\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }, el.name), /*#__PURE__*/React.createElement(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }\n    }, \"R\\xE9ference :\", el.reference), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }\n    }, \"Quantit\\xE9:\", el.quantity), /*#__PURE__*/React.createElement(ButtonGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.toggle(el),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 19\n      }\n    }, \"Modifier\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        this.props.DeleteProduct(el);\n        this.props.Addhistory({\n          action: \"Delete\",\n          UserName: localStorage.getItem(\"UserName\"),\n          UserID: localStorage.getItem(\"UserID\"),\n          Date: today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds() + \"Date\" + today.getDate() + \"/\" + (today.getMonth() + 1) + \"/\" + today.getFullYear(),\n          product: el.id\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 19\n      }\n    }, \"Supprimer\")))))), /*#__PURE__*/React.createElement(ModalEditProduct, {\n      Modalopen: this.state.Modalopen,\n      toggle: this.toggle,\n      element: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(ProductShow, {\n      Modalopenshow: this.state.Modalopenshow,\n      toggleshow: this.toggleshow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  products: state.products,\n  history: state.history\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getAllProducts: () => dispatch(getProductsFromApi()),\n  getallhistory: () => dispatch(getAllHistoryFromApi()),\n  DeleteProduct: id => dispatch(DeleteProductFromApi(id)),\n  Addhistory: element => dispatch(addHistoryInApi(element))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Productcontainer);\n/*\n<div>\n              <div>\n                <CardImg\n                  top\n                  width=\"25px\"\n                  src={el.picture}\n                  alt=\"Card image cap\"\n                />\n              </div>\n              <div>{el.name}</div>\n              <div>\n                <button outline color=\"primary\" onClick={() => this.toggle(el)}>\n                  Modifier\n                </button>\n                <button\n                  onClick={() => {\n                    this.props.Addhistory({\n                      action: \"Delete\",\n                      UserName: localStorage.getItem(\"UserName\"),\n                      UserID: localStorage.getItem(\"UserID\"),\n                      Date:\n                        today.getHours() +\n                        \":\" +\n                        today.getMinutes() +\n                        \":\" +\n                        today.getSeconds() +\n                        \"Date\" +\n                        today.getDate() +\n                        \"/\" +\n                        (today.getMonth() + 1) +\n                        \"/\" +\n                        today.getFullYear(),\n                      product: el.id,\n                    });\n                    this.props.DeleteProduct(el.id);\n                  }}\n                >\n                  Supprimer\n                </button>\n              </div>\n            </div>\n            */","map":{"version":3,"sources":["/home/othmen/Bureau/Simplon work/React projects/Atelier-Lital-Project/src/components/ProductContainer/productContainer.js"],"names":["React","Component","connect","getProductsFromApi","DeleteProductFromApi","Addproduct","ProductShow","Card","Button","CardTitle","CardText","Row","ButtonGroup","CardImg","addHistoryInApi","getAllHistoryFromApi","ModalEditProduct","newArray","Types","Colors","products","Brands","prduct_status","Mesures","Location","Boxs","Quantity","today","Date","Productcontainer","state","Modalopen","Modalopenshow","element","product","close","setState","open","distinctDoubleType","ArrayOfTypes","props","map","el","push","type","Set","distinctDoubleColor","ArrayofColors","color","distinctDoubleBrand","ArrayofBrand","brand","distinctDoubleProductStatus","Arrayofproduct_status","distinctDoubleMesures","Arrayofmesures","mesures","distinctDoubleLocation","ArrayofLocation","location","distinctDoubleBox","ArrayofBoxs","box","distinctDoubleQuantity","Arrayofquantity","quantity","toggle","arr","tab","toggleshow","filterByRef","e","reference","target","value","console","log","componentDidMount","getAllProducts","getallhistory","render","x","picture","name","DeleteProduct","Addhistory","action","UserName","localStorage","getItem","UserID","getHours","getMinutes","getSeconds","getDate","getMonth","getFullYear","id","mapStateToProps","history","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  getProductsFromApi,\n  DeleteProductFromApi,\n} from \"../../Action/ProductActions.js\";\nimport Addproduct from \"./../Modals/ModalAddProduct\";\nimport ProductShow from \"./../Modals/ModalShowProduct\";\nimport {\n  Card,\n  Button,\n  CardTitle,\n  CardText,\n  Row,\n  ButtonGroup,\n  CardImg,\n} from \"reactstrap\";\nimport {\n  addHistoryInApi,\n  getAllHistoryFromApi,\n} from \"../../Action/historyActions\";\nimport ModalEditProduct from \"../Modals/ModalEditProduct\";\n\nvar newArray = [];\nvar Types = [];\nvar Colors = [];\nvar products = [];\nvar Brands = [];\nvar prduct_status = [];\nvar Mesures = [];\nvar Location = [];\nvar Boxs = [];\nvar Quantity = [];\nvar today = new Date();\n\nclass Productcontainer extends Component {\n  state = {\n    Modalopen: false,\n    Modalopenshow: false,\n    element: [],\n    product: products,\n  };\n\n  componentDidMount() {\n    this.props.getAllProducts();\n    this.props.getallhistory();\n    console.log(\"tttttttt\", this.props.products);\n    this.setState({ products: this.props.products });\n    console.log(\"rrrr\", this.state.products);\n  }\n  close = () => {\n    this.setState({ open: !this.state.open });\n  };\n  distinctDoubleType = () => {\n    let ArrayOfTypes = [];\n    this.props.products.map((el) => ArrayOfTypes.push(el.type));\n    newArray = new Set(ArrayOfTypes);\n    Types = [...newArray];\n  };\n  distinctDoubleColor = () => {\n    let ArrayofColors = [];\n    this.props.products.map((el) => ArrayofColors.push(el.color));\n    newArray = new Set(ArrayofColors);\n    Colors = [...newArray];\n  };\n  distinctDoubleBrand = () => {\n    let ArrayofBrand = [];\n    this.props.products.map((el) => ArrayofBrand.push(el.brand));\n    newArray = new Set(ArrayofBrand);\n    Brands = [...newArray];\n  };\n  distinctDoubleProductStatus = () => {\n    let Arrayofproduct_status = [];\n    this.props.products.map((el) =>\n      Arrayofproduct_status.push(el.prduct_status)\n    );\n    newArray = new Set(Arrayofproduct_status);\n    prduct_status = [...newArray];\n  };\n  distinctDoubleMesures = () => {\n    let Arrayofmesures = [];\n    this.props.products.map((el) => Arrayofmesures.push(el.mesures));\n    newArray = new Set(Arrayofmesures);\n    Mesures = [...newArray];\n  };\n  distinctDoubleLocation = () => {\n    let ArrayofLocation = [];\n    this.props.products.map((el) => ArrayofLocation.push(el.location));\n    newArray = new Set(ArrayofLocation);\n    Location = [...newArray];\n  };\n  distinctDoubleBox = () => {\n    let ArrayofBoxs = [];\n\n    this.props.products.map((el) => ArrayofBoxs.push(el.box));\n    newArray = new Set(ArrayofBoxs);\n    Boxs = [...newArray];\n  };\n  distinctDoubleQuantity = () => {\n    let Arrayofquantity = [];\n\n    this.props.products.map((el) => Arrayofquantity.push(el.quantity));\n    newArray = new Set(Arrayofquantity);\n    Quantity = [...newArray];\n  };\n  toggle = (el) => {\n    this.setState({\n      Modalopen: !this.state.Modalopen,\n      element: el,\n      arr: this.props.tab,\n    });\n  };\n  toggleshow = (el) => {\n    this.setState({\n      Modalopenshow: !this.state.Modalopenshow,\n    });\n  };\n  filterByRef = (e) => {\n    this.setState({ reference: e.target.value });\n    console.log(this.state.reference);\n  };\n  render() {\n    this.distinctDoubleType();\n    this.distinctDoubleColor();\n    this.distinctDoubleBrand();\n    this.distinctDoubleProductStatus();\n    this.distinctDoubleMesures();\n    this.distinctDoubleLocation();\n    this.distinctDoubleBox();\n    this.distinctDoubleQuantity();\n    var x = x.push(this.props.products);\n    products = this.props.products;\n    return (\n      <div>\n        <Row>\n          <div className=\"mt-5 d-flex\">\n            <i class=\"fas fa-search\"></i>\n            <input\n              placeholder=\"Filtrer par reference ...\"\n              onChange={(e) => this.filterByRef(e)}\n            />\n\n            <Addproduct />\n          </div>\n        </Row>\n        <Row xs={12} sm={12} md={12} lg={12}>\n          <div className=\"ici\">\n            <select name=\"pets\" id=\"product-select\">\n              <option value=\"\">Type</option>\n              {Types.map((el) => (\n                <option value={el}>{el}</option>\n              ))}\n            </select>\n            <select name=\"pets\" id=\"color-select\">\n              <option value=\"\">Couleur</option>\n              {Colors.map((el) => (\n                <option value={el}>{el}</option>\n              ))}\n            </select>\n            <select name=\"pets\" id=\"brand-select\">\n              <option value=\"\">Marque</option>\n              {Brands.map((el) => (\n                <option value={el}>{el}</option>\n              ))}\n            </select>\n            <select name=\"pets\" id=\"productStatus-select\">\n              <option value=\"\">Produit_Status</option>\n              {prduct_status.map((el) => (\n                <option value={el}>{el}</option>\n              ))}\n            </select>\n            <select name=\"pets\" id=\"Mesure-select\">\n              <option value=\"\">Mesure</option>\n              {Mesures.map((el) => (\n                <option value={el}>{el}</option>\n              ))}\n            </select>\n            <select name=\"pets\" id=\"Location-select\">\n              <option value=\"\">Localisation</option>\n              {Location.map((el) => (\n                <option value={el}>{el}</option>\n              ))}\n            </select>\n            <select name=\"pets\" id=\"box-select\">\n              <option value=\"\">Embalage</option>\n              {Boxs.map((el) => (\n                <option value={el}>{el}</option>\n              ))}\n            </select>\n            <select name=\"pets\" id=\"Quantity-select\">\n              <option value=\"\">Quantité</option>\n              {Quantity.map((el) => (\n                <option value={el}>{el}</option>\n              ))}\n            </select>\n          </div>\n        </Row>\n        <div className=\"fl\">\n          {this.props.products.map((el) => (\n            <a onClick={() => this.toggleshow()}>\n              <Card className=\"cardproduct\">\n                <CardImg\n                  top\n                  width=\"25px\"\n                  src={el.picture}\n                  alt=\"Card image cap\"\n                  className=\"cardimageproduct\"\n                />\n                <CardTitle>{el.name}</CardTitle>\n\n                <CardText>Réference :{el.reference}</CardText>\n                <span>Quantité:{el.quantity}</span>\n\n                <ButtonGroup>\n                  <Button onClick={() => this.toggle(el)}>Modifier</Button>\n                  <Button\n                    onClick={() => {\n                      this.props.DeleteProduct(el);\n                      this.props.Addhistory({\n                        action: \"Delete\",\n                        UserName: localStorage.getItem(\"UserName\"),\n                        UserID: localStorage.getItem(\"UserID\"),\n                        Date:\n                          today.getHours() +\n                          \":\" +\n                          today.getMinutes() +\n                          \":\" +\n                          today.getSeconds() +\n                          \"Date\" +\n                          today.getDate() +\n                          \"/\" +\n                          (today.getMonth() + 1) +\n                          \"/\" +\n                          today.getFullYear(),\n                        product: el.id,\n                      });\n                    }}\n                  >\n                    Supprimer\n                  </Button>\n                </ButtonGroup>\n              </Card>\n            </a>\n          ))}\n        </div>\n        <ModalEditProduct\n          Modalopen={this.state.Modalopen}\n          toggle={this.toggle}\n          element={this.state}\n        />\n        <ProductShow\n          Modalopenshow={this.state.Modalopenshow}\n          toggleshow={this.toggleshow}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  products: state.products,\n  history: state.history,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getAllProducts: () => dispatch(getProductsFromApi()),\n  getallhistory: () => dispatch(getAllHistoryFromApi()),\n  DeleteProduct: (id) => dispatch(DeleteProductFromApi(id)),\n  Addhistory: (element) => dispatch(addHistoryInApi(element)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Productcontainer);\n\n/*\n<div>\n              <div>\n                <CardImg\n                  top\n                  width=\"25px\"\n                  src={el.picture}\n                  alt=\"Card image cap\"\n                />\n              </div>\n              <div>{el.name}</div>\n              <div>\n                <button outline color=\"primary\" onClick={() => this.toggle(el)}>\n                  Modifier\n                </button>\n                <button\n                  onClick={() => {\n                    this.props.Addhistory({\n                      action: \"Delete\",\n                      UserName: localStorage.getItem(\"UserName\"),\n                      UserID: localStorage.getItem(\"UserID\"),\n                      Date:\n                        today.getHours() +\n                        \":\" +\n                        today.getMinutes() +\n                        \":\" +\n                        today.getSeconds() +\n                        \"Date\" +\n                        today.getDate() +\n                        \"/\" +\n                        (today.getMonth() + 1) +\n                        \"/\" +\n                        today.getFullYear(),\n                      product: el.id,\n                    });\n                    this.props.DeleteProduct(el.id);\n                  }}\n                >\n                  Supprimer\n                </button>\n              </div>\n            </div>\n            */\n"]},"metadata":{},"sourceType":"module"}