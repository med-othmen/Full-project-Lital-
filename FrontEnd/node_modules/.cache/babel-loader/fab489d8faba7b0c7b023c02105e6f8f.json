{"ast":null,"code":"var _jsxFileName = \"/home/othmen/Bureau/Simplon work/React projects/Atelier-Lital-Project/src/components/ProductContainer/productContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getProductsFromApi, DeleteProductFromApi } from \"../../Action/ProductActions.js\";\nimport Addproduct from \"./../Modals/ModalAddProduct\";\nimport { Card, Button, CardTitle, CardText, Row, ButtonGroup, CardImg } from \"reactstrap\";\nimport { addHistoryInApi, getAllHistoryFromApi } from \"../../Action/historyActions\";\nimport ModalEditProduct from \"../Modals/ModalEditProduct\";\nvar newArray = [];\nvar Types = [];\nvar Colors = [];\nvar products = this.props.products;\nvar Brands = [];\nvar prduct_status = [];\nvar Mesures = [];\nvar Location = [];\nvar Boxs = [];\nvar Quantity = [];\nvar today = new Date();\n\nclass Productcontainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Modalopen: false,\n      element: []\n    };\n\n    this.close = () => {\n      this.setState({\n        open: !this.state.open\n      });\n    };\n\n    this.distinctDoubleType = () => {\n      let ArrayOfTypes = [];\n      this.props.products.map(el => ArrayOfTypes.push(el.type));\n      newArray = new Set(ArrayOfTypes);\n      Types = [...newArray];\n    };\n\n    this.distinctDoubleColor = () => {\n      let ArrayofColors = [];\n      this.props.products.map(el => ArrayofColors.push(el.color));\n      newArray = new Set(ArrayofColors);\n      Colors = [...newArray];\n    };\n\n    this.distinctDoubleBrand = () => {\n      let ArrayofBrand = [];\n      this.props.products.map(el => ArrayofBrand.push(el.brand));\n      newArray = new Set(ArrayofBrand);\n      Brands = [...newArray];\n    };\n\n    this.distinctDoubleProductStatus = () => {\n      let Arrayofproduct_status = [];\n      this.props.products.map(el => Arrayofproduct_status.push(el.prduct_status));\n      newArray = new Set(Arrayofproduct_status);\n      prduct_status = [...newArray];\n    };\n\n    this.distinctDoubleMesures = () => {\n      let Arrayofmesures = [];\n      this.props.products.map(el => Arrayofmesures.push(el.mesures));\n      newArray = new Set(Arrayofmesures);\n      Mesures = [...newArray];\n    };\n\n    this.distinctDoubleLocation = () => {\n      let ArrayofLocation = [];\n      this.props.products.map(el => ArrayofLocation.push(el.location));\n      newArray = new Set(ArrayofLocation);\n      Location = [...newArray];\n    };\n\n    this.distinctDoubleBox = () => {\n      let ArrayofBoxs = [];\n      this.props.products.map(el => ArrayofBoxs.push(el.box));\n      newArray = new Set(ArrayofBoxs);\n      Boxs = [...newArray];\n    };\n\n    this.distinctDoubleQuantity = () => {\n      let Arrayofquantity = [];\n      this.props.products.map(el => Arrayofquantity.push(el.quantity));\n      newArray = new Set(Arrayofquantity);\n      Quantity = [...newArray];\n    };\n\n    this.toggle = el => {\n      this.setState({\n        Modalopen: !this.state.Modalopen,\n        element: el\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getAllProducts();\n    this.props.getallhistory();\n    var products = this.props.products;\n  }\n\n  render() {\n    this.distinctDoubleType();\n    this.distinctDoubleColor();\n    this.distinctDoubleBrand();\n    this.distinctDoubleProductStatus();\n    this.distinctDoubleMesures();\n    this.distinctDoubleLocation();\n    this.distinctDoubleBox();\n    this.distinctDoubleQuantity();\n    products = this.props.products;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mt-5 d-flex\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      placeholder: \"Filtrer par reference ...\",\n      onChange: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Addproduct, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      xs: 12,\n      sm: 12,\n      md: 12,\n      lg: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ici\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      name: \"pets\",\n      id: \"product-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, \"Type\"), Types.map(el => /*#__PURE__*/React.createElement(\"option\", {\n      value: el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, el))), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"pets\",\n      id: \"color-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, \"Couleur\"), Colors.map(el => /*#__PURE__*/React.createElement(\"option\", {\n      value: el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }\n    }, el))), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"pets\",\n      id: \"brand-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }, \"Marque\"), Brands.map(el => /*#__PURE__*/React.createElement(\"option\", {\n      value: el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, el))), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"pets\",\n      id: \"productStatus-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }\n    }, \"Produit_Status\"), prduct_status.map(el => /*#__PURE__*/React.createElement(\"option\", {\n      value: el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, el))), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"pets\",\n      id: \"Mesure-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }, \"Mesure\"), Mesures.map(el => /*#__PURE__*/React.createElement(\"option\", {\n      value: el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }\n    }, el))), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"pets\",\n      id: \"Location-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }\n    }, \"Localisation\"), Location.map(el => /*#__PURE__*/React.createElement(\"option\", {\n      value: el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }\n    }, el))), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"pets\",\n      id: \"box-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 15\n      }\n    }, \"Embalage\"), Boxs.map(el => /*#__PURE__*/React.createElement(\"option\", {\n      value: el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, el))), /*#__PURE__*/React.createElement(\"select\", {\n      name: \"pets\",\n      id: \"Quantity-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 15\n      }\n    }, \"Quantit\\xE9\"), Quantity.map(el => /*#__PURE__*/React.createElement(\"option\", {\n      value: el,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, el))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }, this.products.map(el => /*#__PURE__*/React.createElement(Card, {\n      className: \"cardproduct\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardImg, {\n      top: true,\n      width: \"25px\",\n      src: el.picture,\n      alt: \"Card image cap\",\n      className: \"cardimageproduct\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(CardTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    }, el.name), /*#__PURE__*/React.createElement(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 15\n      }\n    }, el.reference), /*#__PURE__*/React.createElement(ButtonGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.toggle(el),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }, \"Modifier\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: () => {\n        this.props.Addhistory({\n          action: \"Delete\",\n          UserName: localStorage.getItem(\"UserName\"),\n          UserID: localStorage.getItem(\"UserID\"),\n          Date: today.getHours() + \":\" + today.getMinutes() + \":\" + today.getSeconds() + \"Date\" + today.getDate() + \"/\" + (today.getMonth() + 1) + \"/\" + today.getFullYear(),\n          product: el.id\n        });\n        this.props.DeleteProduct(el);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    }, \"Supprimer\"))))), /*#__PURE__*/React.createElement(ModalEditProduct, {\n      Modalopen: this.state.Modalopen,\n      toggle: this.toggle,\n      element: this.state,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  products: state.products,\n  history: state.history\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getAllProducts: () => dispatch(getProductsFromApi()),\n  getallhistory: () => dispatch(getAllHistoryFromApi()),\n  DeleteProduct: id => dispatch(DeleteProductFromApi(id)),\n  Addhistory: element => dispatch(addHistoryInApi(element))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Productcontainer);\n/*\n<div>\n              <div>\n                <CardImg\n                  top\n                  width=\"25px\"\n                  src={el.picture}\n                  alt=\"Card image cap\"\n                />\n              </div>\n              <div>{el.name}</div>\n              <div>\n                <button outline color=\"primary\" onClick={() => this.toggle(el)}>\n                  Modifier\n                </button>\n                <button\n                  onClick={() => {\n                    this.props.Addhistory({\n                      action: \"Delete\",\n                      UserName: localStorage.getItem(\"UserName\"),\n                      UserID: localStorage.getItem(\"UserID\"),\n                      Date:\n                        today.getHours() +\n                        \":\" +\n                        today.getMinutes() +\n                        \":\" +\n                        today.getSeconds() +\n                        \"Date\" +\n                        today.getDate() +\n                        \"/\" +\n                        (today.getMonth() + 1) +\n                        \"/\" +\n                        today.getFullYear(),\n                      product: el.id,\n                    });\n                    this.props.DeleteProduct(el.id);\n                  }}\n                >\n                  Supprimer\n                </button>\n              </div>\n            </div>\n            */","map":{"version":3,"sources":["/home/othmen/Bureau/Simplon work/React projects/Atelier-Lital-Project/src/components/ProductContainer/productContainer.js"],"names":["React","Component","connect","getProductsFromApi","DeleteProductFromApi","Addproduct","Card","Button","CardTitle","CardText","Row","ButtonGroup","CardImg","addHistoryInApi","getAllHistoryFromApi","ModalEditProduct","newArray","Types","Colors","products","props","Brands","prduct_status","Mesures","Location","Boxs","Quantity","today","Date","Productcontainer","state","Modalopen","element","close","setState","open","distinctDoubleType","ArrayOfTypes","map","el","push","type","Set","distinctDoubleColor","ArrayofColors","color","distinctDoubleBrand","ArrayofBrand","brand","distinctDoubleProductStatus","Arrayofproduct_status","distinctDoubleMesures","Arrayofmesures","mesures","distinctDoubleLocation","ArrayofLocation","location","distinctDoubleBox","ArrayofBoxs","box","distinctDoubleQuantity","Arrayofquantity","quantity","toggle","componentDidMount","getAllProducts","getallhistory","render","picture","name","reference","Addhistory","action","UserName","localStorage","getItem","UserID","getHours","getMinutes","getSeconds","getDate","getMonth","getFullYear","product","id","DeleteProduct","mapStateToProps","history","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  getProductsFromApi,\n  DeleteProductFromApi,\n} from \"../../Action/ProductActions.js\";\nimport Addproduct from \"./../Modals/ModalAddProduct\";\n\nimport {\n  Card,\n  Button,\n  CardTitle,\n  CardText,\n  Row,\n  ButtonGroup,\n  CardImg,\n} from \"reactstrap\";\nimport {\n  addHistoryInApi,\n  getAllHistoryFromApi,\n} from \"../../Action/historyActions\";\nimport ModalEditProduct from \"../Modals/ModalEditProduct\";\n\nvar newArray = [];\nvar Types = [];\nvar Colors = [];\nvar products = this.props.products;\nvar Brands = [];\nvar prduct_status = [];\nvar Mesures = [];\nvar Location = [];\nvar Boxs = [];\nvar Quantity = [];\nvar today = new Date();\n\nclass Productcontainer extends Component {\n  state = { Modalopen: false, element: [] };\n\n  componentDidMount() {\n    this.props.getAllProducts();\n    this.props.getallhistory();\n    var products = this.props.products;\n  }\n  close = () => {\n    this.setState({ open: !this.state.open });\n  };\n  distinctDoubleType = () => {\n    let ArrayOfTypes = [];\n    this.props.products.map((el) => ArrayOfTypes.push(el.type));\n    newArray = new Set(ArrayOfTypes);\n    Types = [...newArray];\n  };\n  distinctDoubleColor = () => {\n    let ArrayofColors = [];\n    this.props.products.map((el) => ArrayofColors.push(el.color));\n    newArray = new Set(ArrayofColors);\n    Colors = [...newArray];\n  };\n  distinctDoubleBrand = () => {\n    let ArrayofBrand = [];\n    this.props.products.map((el) => ArrayofBrand.push(el.brand));\n    newArray = new Set(ArrayofBrand);\n    Brands = [...newArray];\n  };\n  distinctDoubleProductStatus = () => {\n    let Arrayofproduct_status = [];\n    this.props.products.map((el) =>\n      Arrayofproduct_status.push(el.prduct_status)\n    );\n    newArray = new Set(Arrayofproduct_status);\n    prduct_status = [...newArray];\n  };\n  distinctDoubleMesures = () => {\n    let Arrayofmesures = [];\n    this.props.products.map((el) => Arrayofmesures.push(el.mesures));\n    newArray = new Set(Arrayofmesures);\n    Mesures = [...newArray];\n  };\n  distinctDoubleLocation = () => {\n    let ArrayofLocation = [];\n    this.props.products.map((el) => ArrayofLocation.push(el.location));\n    newArray = new Set(ArrayofLocation);\n    Location = [...newArray];\n  };\n  distinctDoubleBox = () => {\n    let ArrayofBoxs = [];\n\n    this.props.products.map((el) => ArrayofBoxs.push(el.box));\n    newArray = new Set(ArrayofBoxs);\n    Boxs = [...newArray];\n  };\n  distinctDoubleQuantity = () => {\n    let Arrayofquantity = [];\n\n    this.props.products.map((el) => Arrayofquantity.push(el.quantity));\n    newArray = new Set(Arrayofquantity);\n    Quantity = [...newArray];\n  };\n  toggle = (el) => {\n    this.setState({\n      Modalopen: !this.state.Modalopen,\n      element: el,\n    });\n  };\n  render() {\n    this.distinctDoubleType();\n    this.distinctDoubleColor();\n    this.distinctDoubleBrand();\n    this.distinctDoubleProductStatus();\n    this.distinctDoubleMesures();\n    this.distinctDoubleLocation();\n    this.distinctDoubleBox();\n    this.distinctDoubleQuantity();\n    products = this.props.products;\n    return (\n      <div>\n        <Row>\n          <div className=\"mt-5 d-flex\">\n            <i class=\"fas fa-search\"></i>\n            <input placeholder=\"Filtrer par reference ...\" onChange />\n\n            <Addproduct />\n          </div>\n        </Row>\n        <Row xs={12} sm={12} md={12} lg={12}>\n          <div className=\"ici\">\n            <select name=\"pets\" id=\"product-select\">\n              <option value=\"\">Type</option>\n              {Types.map((el) => (\n                <option value={el}>{el}</option>\n              ))}\n            </select>\n            <select name=\"pets\" id=\"color-select\">\n              <option value=\"\">Couleur</option>\n              {Colors.map((el) => (\n                <option value={el}>{el}</option>\n              ))}\n            </select>\n            <select name=\"pets\" id=\"brand-select\">\n              <option value=\"\">Marque</option>\n              {Brands.map((el) => (\n                <option value={el}>{el}</option>\n              ))}\n            </select>\n            <select name=\"pets\" id=\"productStatus-select\">\n              <option value=\"\">Produit_Status</option>\n              {prduct_status.map((el) => (\n                <option value={el}>{el}</option>\n              ))}\n            </select>\n            <select name=\"pets\" id=\"Mesure-select\">\n              <option value=\"\">Mesure</option>\n              {Mesures.map((el) => (\n                <option value={el}>{el}</option>\n              ))}\n            </select>\n            <select name=\"pets\" id=\"Location-select\">\n              <option value=\"\">Localisation</option>\n              {Location.map((el) => (\n                <option value={el}>{el}</option>\n              ))}\n            </select>\n            <select name=\"pets\" id=\"box-select\">\n              <option value=\"\">Embalage</option>\n              {Boxs.map((el) => (\n                <option value={el}>{el}</option>\n              ))}\n            </select>\n            <select name=\"pets\" id=\"Quantity-select\">\n              <option value=\"\">Quantité</option>\n              {Quantity.map((el) => (\n                <option value={el}>{el}</option>\n              ))}\n            </select>\n          </div>\n        </Row>\n        <div className=\"fl\">\n          {this.products.map((el) => (\n            <Card className=\"cardproduct\">\n              <CardImg\n                top\n                width=\"25px\"\n                src={el.picture}\n                alt=\"Card image cap\"\n                className=\"cardimageproduct\"\n              />\n              <CardTitle>{el.name}</CardTitle>\n\n              <CardText>{el.reference}</CardText>\n              <ButtonGroup>\n                <Button onClick={() => this.toggle(el)}>Modifier</Button>\n                <Button\n                  onClick={() => {\n                    this.props.Addhistory({\n                      action: \"Delete\",\n                      UserName: localStorage.getItem(\"UserName\"),\n                      UserID: localStorage.getItem(\"UserID\"),\n                      Date:\n                        today.getHours() +\n                        \":\" +\n                        today.getMinutes() +\n                        \":\" +\n                        today.getSeconds() +\n                        \"Date\" +\n                        today.getDate() +\n                        \"/\" +\n                        (today.getMonth() + 1) +\n                        \"/\" +\n                        today.getFullYear(),\n                      product: el.id,\n                    });\n                    this.props.DeleteProduct(el);\n                  }}\n                >\n                  Supprimer\n                </Button>\n              </ButtonGroup>\n            </Card>\n          ))}\n        </div>\n        <ModalEditProduct\n          Modalopen={this.state.Modalopen}\n          toggle={this.toggle}\n          element={this.state}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  products: state.products,\n  history: state.history,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  getAllProducts: () => dispatch(getProductsFromApi()),\n  getallhistory: () => dispatch(getAllHistoryFromApi()),\n  DeleteProduct: (id) => dispatch(DeleteProductFromApi(id)),\n  Addhistory: (element) => dispatch(addHistoryInApi(element)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Productcontainer);\n\n/*\n<div>\n              <div>\n                <CardImg\n                  top\n                  width=\"25px\"\n                  src={el.picture}\n                  alt=\"Card image cap\"\n                />\n              </div>\n              <div>{el.name}</div>\n              <div>\n                <button outline color=\"primary\" onClick={() => this.toggle(el)}>\n                  Modifier\n                </button>\n                <button\n                  onClick={() => {\n                    this.props.Addhistory({\n                      action: \"Delete\",\n                      UserName: localStorage.getItem(\"UserName\"),\n                      UserID: localStorage.getItem(\"UserID\"),\n                      Date:\n                        today.getHours() +\n                        \":\" +\n                        today.getMinutes() +\n                        \":\" +\n                        today.getSeconds() +\n                        \"Date\" +\n                        today.getDate() +\n                        \"/\" +\n                        (today.getMonth() + 1) +\n                        \"/\" +\n                        today.getFullYear(),\n                      product: el.id,\n                    });\n                    this.props.DeleteProduct(el.id);\n                  }}\n                >\n                  Supprimer\n                </button>\n              </div>\n            </div>\n            */\n"]},"metadata":{},"sourceType":"module"}