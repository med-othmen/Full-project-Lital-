{"ast":null,"code":"import { ADD_USER, DELETE_USER, GET_ALL_USER, MODIF_USER } from \"./types\";\nimport Axios from \"axios\";\n/* get all USER */\n\nexport const getAllUser = payload => ({\n  type: GET_ALL_USER,\n  payload\n});\nexport function getUserFromApi() {\n  return dispatch => Axios.get(\"http://localhost:3000/user\").then(res => {\n    dispatch(getAllUser(res.data));\n    console.log(res.data);\n  });\n}\n/*modif user*/\n\nexport const ModifierUser = payload => ({\n  type: MODIF_USER,\n  payload\n});\nexport function modifUserFromApi(data) {\n  let id = data.id;\n  let a = data.first_name;\n  let b = data.last_name;\n  let c = data.user_name;\n  let d = data.password;\n  let e = data.email;\n  let f = data.post;\n  return dispatch => Axios.put(`http://localhost:3000/user/${id}`, {\n    first_name: a,\n    last_name: b,\n    user_name: c,\n    password: d,\n    email: e,\n    post: f\n  }).then(res => {\n    dispatch(ModifierUser(res.data)), window.location.path = \"/dee\";\n  });\n}\n/* add  USER */\n\nexport const AddUser = payload => ({\n  type: ADD_USER,\n  payload\n});\nexport function addUserFromApi(data) {\n  return dispatch => Axios.post(\"http://localhost:3000/user\", data).then(res => dispatch(AddUser(data)));\n}\n/*delette USER */\n\nexport const deleteUser = payload => ({\n  type: DELETE_USER,\n  payload\n});\nexport function deleteUserToApi(id) {\n  return dispatch => Axios.delete(`http://localhost:3000/user/${id}`).then(res => {\n    dispatch(deleteUser(res.data));\n    window.location.reload(false);\n  });\n}","map":{"version":3,"sources":["/home/othmen/Bureau/Simplon work/React projects/Atelier-Lital-Project/src/Action/userActions.js"],"names":["ADD_USER","DELETE_USER","GET_ALL_USER","MODIF_USER","Axios","getAllUser","payload","type","getUserFromApi","dispatch","get","then","res","data","console","log","ModifierUser","modifUserFromApi","id","a","first_name","b","last_name","c","user_name","d","password","e","email","f","post","put","window","location","path","AddUser","addUserFromApi","deleteUser","deleteUserToApi","delete","reload"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,YAAhC,EAA8CC,UAA9C,QAAgE,SAAhE;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA;;AAEA,OAAO,MAAMC,UAAU,GAAIC,OAAD,KAAc;AACtCC,EAAAA,IAAI,EAAEL,YADgC;AAEtCI,EAAAA;AAFsC,CAAd,CAAnB;AAKP,OAAO,SAASE,cAAT,GAA0B;AAC/B,SAAQC,QAAD,IACLL,KAAK,CAACM,GAAN,CAAU,4BAAV,EAAwCC,IAAxC,CAA8CC,GAAD,IAAS;AACpDH,IAAAA,QAAQ,CAACJ,UAAU,CAACO,GAAG,CAACC,IAAL,CAAX,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACC,IAAhB;AACD,GAHD,CADF;AAKD;AACD;;AACA,OAAO,MAAMG,YAAY,GAAIV,OAAD,KAAc;AACxCC,EAAAA,IAAI,EAAEJ,UADkC;AAExCG,EAAAA;AAFwC,CAAd,CAArB;AAIP,OAAO,SAASW,gBAAT,CAA0BJ,IAA1B,EAAgC;AACrC,MAAIK,EAAE,GAAGL,IAAI,CAACK,EAAd;AACA,MAAIC,CAAC,GAAGN,IAAI,CAACO,UAAb;AACA,MAAIC,CAAC,GAAGR,IAAI,CAACS,SAAb;AACA,MAAIC,CAAC,GAAGV,IAAI,CAACW,SAAb;AACA,MAAIC,CAAC,GAAGZ,IAAI,CAACa,QAAb;AACA,MAAIC,CAAC,GAAGd,IAAI,CAACe,KAAb;AACA,MAAIC,CAAC,GAAGhB,IAAI,CAACiB,IAAb;AAEA,SAAQrB,QAAD,IACLL,KAAK,CAAC2B,GAAN,CAAW,8BAA6Bb,EAAG,EAA3C,EAA8C;AAC5CE,IAAAA,UAAU,EAAED,CADgC;AAE5CG,IAAAA,SAAS,EAAED,CAFiC;AAG5CG,IAAAA,SAAS,EAAED,CAHiC;AAI5CG,IAAAA,QAAQ,EAAED,CAJkC;AAK5CG,IAAAA,KAAK,EAAED,CALqC;AAM5CG,IAAAA,IAAI,EAAED;AANsC,GAA9C,EAOGlB,IAPH,CAOSC,GAAD,IAAS;AACfH,IAAAA,QAAQ,CAACO,YAAY,CAACJ,GAAG,CAACC,IAAL,CAAb,CAAR,EAAmCmB,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,MAA1D;AAGD,GAXD,CADF;AAaD;AAED;;AACA,OAAO,MAAMC,OAAO,GAAI7B,OAAD,KAAc;AACnCC,EAAAA,IAAI,EAAEP,QAD6B;AAEnCM,EAAAA;AAFmC,CAAd,CAAhB;AAKP,OAAO,SAAS8B,cAAT,CAAwBvB,IAAxB,EAA8B;AACnC,SAAQJ,QAAD,IACLL,KAAK,CAAC0B,IAAN,CAAW,4BAAX,EAAyCjB,IAAzC,EAA+CF,IAA/C,CAAqDC,GAAD,IAClDH,QAAQ,CAAC0B,OAAO,CAACtB,IAAD,CAAR,CADV,CADF;AAID;AACD;;AAEA,OAAO,MAAMwB,UAAU,GAAI/B,OAAD,KAAc;AACtCC,EAAAA,IAAI,EAAEN,WADgC;AAEtCK,EAAAA;AAFsC,CAAd,CAAnB;AAIP,OAAO,SAASgC,eAAT,CAAyBpB,EAAzB,EAA6B;AAClC,SAAQT,QAAD,IACLL,KAAK,CAACmC,MAAN,CAAc,8BAA6BrB,EAAG,EAA9C,EAAiDP,IAAjD,CAAuDC,GAAD,IAAS;AAC7DH,IAAAA,QAAQ,CAAC4B,UAAU,CAACzB,GAAG,CAACC,IAAL,CAAX,CAAR;AACAmB,IAAAA,MAAM,CAACC,QAAP,CAAgBO,MAAhB,CAAuB,KAAvB;AACD,GAHD,CADF;AAKD","sourcesContent":["import { ADD_USER, DELETE_USER, GET_ALL_USER, MODIF_USER } from \"./types\";\nimport Axios from \"axios\";\n/* get all USER */\n\nexport const getAllUser = (payload) => ({\n  type: GET_ALL_USER,\n  payload,\n});\n\nexport function getUserFromApi() {\n  return (dispatch) =>\n    Axios.get(\"http://localhost:3000/user\").then((res) => {\n      dispatch(getAllUser(res.data));\n      console.log(res.data);\n    });\n}\n/*modif user*/\nexport const ModifierUser = (payload) => ({\n  type: MODIF_USER,\n  payload,\n});\nexport function modifUserFromApi(data) {\n  let id = data.id;\n  let a = data.first_name;\n  let b = data.last_name;\n  let c = data.user_name;\n  let d = data.password;\n  let e = data.email;\n  let f = data.post;\n\n  return (dispatch) =>\n    Axios.put(`http://localhost:3000/user/${id}`, {\n      first_name: a,\n      last_name: b,\n      user_name: c,\n      password: d,\n      email: e,\n      post: f,\n    }).then((res) => {\n      dispatch(ModifierUser(res.data)),  window.location.path = \"/dee\";\n\n    \n    });\n}\n\n/* add  USER */\nexport const AddUser = (payload) => ({\n  type: ADD_USER,\n  payload,\n});\n\nexport function addUserFromApi(data) {\n  return (dispatch) =>\n    Axios.post(\"http://localhost:3000/user\", data).then((res) =>\n      dispatch(AddUser(data))\n    );\n}\n/*delette USER */\n\nexport const deleteUser = (payload) => ({\n  type: DELETE_USER,\n  payload,\n});\nexport function deleteUserToApi(id) {\n  return (dispatch) =>\n    Axios.delete(`http://localhost:3000/user/${id}`).then((res) => {\n      dispatch(deleteUser(res.data));\n      window.location.reload(false);\n    });\n}\n"]},"metadata":{},"sourceType":"module"}